components:
  schemas:
    Permission:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        createdBy:
          type: string
          format: uuid
        updatedBy:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      example:
    Policy:
      type: object
      properties:
        id:
          type: string
          format: uuid
        resource:
          type: string
        action:
          type: string
          enum: ["view", "edit", "create", "delete"]
        condition:
          type: object
        decision:
          type: string
          enum: ["allow", "deny"]
        createdBy:
          type: string
          format: uuid
        updatedBy:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      example:
        id: 14c5f260-2ae0-49b7-9968-f6ed2e082526
        resource: users
        action: view
        condition: { "self": true }
        decision: allow
        createdBy: 14c5f260-2ae0-49b7-9968-f6ed2e082526
        createdAt: 2025-01-05T03:27:15.221Z
        updatedBy: 14c5f260-2ae0-49b7-9968-f6ed2e082526
        updatedAt: 2025-01-05T03:27:15.221Z
    Role:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        createdBy:
          type: string
          format: uuid
        updatedBy:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      example:
        id: 14c5f260-2ae0-49b7-9968-f6ed2e082526
        name: public
        description: Default role for users of the app.
        createdBy: 14c5f260-2ae0-49b7-9968-f6ed2e082526
        createdAt: 2025-01-05T03:27:15.221Z
        updatedBy: 14c5f260-2ae0-49b7-9968-f6ed2e082526
        updatedAt: 2025-01-05T03:27:15.221Z
    RolePermission:
      type: object
      properties:
        roleId:
          type: string
          format: uuid
        permissionId:
          type: string
          format: uuid
        createdBy:
          type: string
          format: uuid
        updatedBy:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      example:
    RolePolicy:
      type: object
      properties:
        roleId:
          type: string
          format: uuid
        policyId:
          type: string
          format: uuid
        createdBy:
          type: string
          format: uuid
        updatedBy:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      example:
        roleId: 14c5f260-2ae0-49b7-9968-f6ed2e082526
        policyId: 14c5f260-2ae0-49b7-9968-f6ed2e082526
        createdBy: 14c5f260-2ae0-49b7-9968-f6ed2e082526
        createdAt: 2025-01-05T03:27:15.221Z
        updatedBy: 14c5f260-2ae0-49b7-9968-f6ed2e082526
        updatedAt: 2025-01-05T03:27:15.221Z
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
          format: email
        createdBy:
          type: string
          format: uuid
        updatedBy:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      example:
        id: 14c5f260-2ae0-49b7-9968-f6ed2e082526
        firstName: John
        lastName: Doe
        email: john.doe@example.com
        createdBy: 14c5f260-2ae0-49b7-9968-f6ed2e082526
        createdAt: 2025-01-05T03:27:15.221Z
        updatedBy: 14c5f260-2ae0-49b7-9968-f6ed2e082526
        updatedAt: 2025-01-05T03:27:15.221Z
    UserRole:
      type: object
      properties:
        userId:
          type: string
          format: uuid
        roleId:
          type: string
          format: uuid
        createdBy:
          type: string
          format: uuid
        updatedBy:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      example:
        userId: 14c5f260-2ae0-49b7-9968-f6ed2e082526
        roleId: 14c5f260-2ae0-49b7-9968-f6ed2e082526
        createdBy: 14c5f260-2ae0-49b7-9968-f6ed2e082526
        createdAt: 2025-01-05T03:27:15.221Z
        updatedBy: 14c5f260-2ae0-49b7-9968-f6ed2e082526
        updatedAt: 2025-01-05T03:27:15.221Z

    PaginatedMetadata:
      type: object
      properties:
        limit:
          type: integer
        page:
          type: integer
        pages:
          type: integer
        total:
          type: integer
      example:
        limit: 10
        page: 1
        pages: 5
        total: 48

    PaginatedLinks:
      type: object
      properties:
        first:
          type: string
          format: url
        last:
          type: string
          format: url
        prev:
          type: string
          format: url
          nullable: true
        next:
          type: string
          format: uri
          nullable: true
      example:
        first: localhost:8000/api/v1/users?page=1&limit=10
        last: localhost:8000/api/v1/users?page=1&limit=10
        prev: localhost:8000/api/v1/users?page=1&limit=10
        next: localhost:8000/api/v1/users?page=1&limit=10

    Error:
      type: object
      properties:
        code:
          type: number
        message:
          type: string
      example:
        code: 404
        message: Resource not found
  responses:
    DuplicateEmail:
      description: Email already taken
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            code: 400
            message: Email already taken

    DuplicateEntity:
      description: Entity already exists
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            code: 400
            message: Entity already exists in database

    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            code: 401
            message: Please authenticate

    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            code: 403
            message: Forbidden

    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            code: 404
            message: Not found
  securitySchemes:
    cookieAuth: # arbitrary name for the security scheme; will be used in the "security" key later
      type: apiKey
      in: cookie
      name: session # cookie name
